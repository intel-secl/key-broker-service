<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.intel.mtwilson.kms</groupId>
    <artifactId>kms-core-feature-zip</artifactId>
    <version>6.1-SNAPSHOT</version>
    
    <packaging>pom</packaging>
    <description>
        Projects that inherit this pom can create a jar if they have src/main/java and an html5 zip file if they have src/main/html5
    </description>
    
    <parent>
        <groupId>com.intel.mtwilson.kms</groupId>
        <artifactId>kms-maven-root</artifactId>
        <version>6.1-SNAPSHOT</version>
        <relativePath/>
    </parent>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.intel.mtwilson.kms</groupId>
                <artifactId>kms-maven-bom-coreutil</artifactId>
                <version>6.1-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.intel.mtwilson.kms</groupId>
                <artifactId>kms-maven-bom-external</artifactId>
                <version>6.1-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.11</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
					<complianceLevel>1.8</complianceLevel>
                    <showWeaveInfo>true</showWeaveInfo>
                    <aspectLibraries>
                        <!-- security framework -->
                        <aspectLibrary>
                            <groupId>org.apache.shiro</groupId>
                            <artifactId>shiro-aspectj</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                </configuration>
                <executions>
                    <execution>
                        <id>aspectj-compile</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>                
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjrt</artifactId>
                        <version>1.8.13</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>1.8.13</version>
                    </dependency>
                </dependencies>

            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:ac="antlib:net.sf.antcontrib">
                                <mkdir dir="${project.build.directory}/content"/>
                                <available property="feature.with.java" file="${basedir}/src/main/java" type="dir" />
                                <ac:if>
                                    <equals arg1="${feature.with.java}" arg2="true"/>
                                    <then>
                                        <echo message="***** PROJECT HAS JAVA *****"/>
                                        <mkdir dir="${project.build.directory}/content/java"/>
                                        <copy file="${project.build.directory}/${project.artifactId}-${project.version}.jar" todir="${project.build.directory}/content/java"/>
                                    </then>
                                </ac:if>
                                <available property="feature.with.html5" file="${basedir}/src/main/html5" type="dir" />
                                <ac:if>
                                    <equals arg1="${feature.with.html5}" arg2="true"/>
                                    <then>
                                        <echo message="***** PROJECT HAS HTML5 *****"/>
                                        <zip destfile="${project.build.directory}/${project.artifactId}-${project.version}-html5.zip">
                                            <fileset dir="${basedir}/src/main/html5" />
                                        </zip>
                                        <attachartifact file="${project.build.directory}/${project.artifactId}-${project.version}-html5.zip" classifier="html5" type="zip"/>
                                        <mkdir dir="${project.build.directory}/content/html5"/>
                                        <copy todir="${project.build.directory}/content/html5">
                                            <fileset dir="${basedir}/src/main/html5"/>
                                        </copy>
                                    </then>
                                </ac:if>
                                <available property="feature.with.ansible" file="${basedir}/src/main/ansible" type="dir" />
                                <ac:if>
                                    <equals arg1="${feature.with.ansible}" arg2="true"/>
                                    <then>
                                        <echo message="***** PROJECT HAS ANSIBLE *****"/>
                                        <zip destfile="${project.build.directory}/${project.artifactId}-${project.version}-ansible.zip">
                                            <fileset dir="${basedir}/src/main/ansible" />
                                        </zip>
                                        <attachartifact file="${project.build.directory}/${project.artifactId}-${project.version}-ansible.zip" classifier="ansible" type="zip"/>
                                        <mkdir dir="${project.build.directory}/content/ansible"/>
                                        <copy todir="${project.build.directory}/content/ansible">
                                            <fileset dir="${basedir}/src/main/ansible"/>
                                        </copy>
                                    </then>
                                </ac:if>
                                <available property="feature.with.linux" file="${basedir}/src/main/linux" type="dir" />
                                <ac:if>
                                    <equals arg1="${feature.with.linux}" arg2="true"/>
                                    <then>
                                        <echo message="***** PROJECT HAS ANSIBLE *****"/>
                                        <zip destfile="${project.build.directory}/${project.artifactId}-${project.version}-linux.zip">
                                            <fileset dir="${basedir}/src/main/linux" />
                                        </zip>
                                        <attachartifact file="${project.build.directory}/${project.artifactId}-${project.version}-linux.zip" classifier="linux" type="zip"/>
                                        <mkdir dir="${project.build.directory}/content/linux"/>
                                        <copy todir="${project.build.directory}/content/linux">
                                            <fileset dir="${basedir}/src/main/linux"/>
                                        </copy>
                                    </then>
                                </ac:if>
                                <available property="feature.with.featurexml" file="${basedir}/feature.xml" type="file" />
                                <ac:if>
                                    <equals arg1="${feature.with.featurexml}" arg2="true"/>
                                    <then>
                                        <echo message="***** PROJECT HAS FEATURE.XML *****"/>
                                        <copy file="${basedir}/feature.xml" todir="${project.build.directory}/content"/>
                                        <zip destfile="${project.build.directory}/${project.artifactId}-${project.version}-feature.zip">
                                            <fileset dir="${project.build.directory}/content" />
                                        </zip>
                                        <attachartifact file="${project.build.directory}/${project.artifactId}-${project.version}-feature.zip" classifier="feature" type="zip"/>
                                    </then>
                                </ac:if>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>1.8.4</version>
                    </dependency>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                    </dependency>
                </dependencies>
            </plugin>	    
        </plugins>


        <pluginManagement>
            <plugins>
                <!-- specify version of maven-compiler-plugin, do not skip tests (use -DskipTests=true on command line to skip tests) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <skip>false</skip>
                        <showDeprecation>true</showDeprecation>
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                    </configuration>
                </plugin>
                
                <!-- Specify version of maven-jar-plugin and default MANIFEST.MF entries. The variables are evaluated by the project that is being built, not by this parent pom. Also they are automatically picked up by the maven-shade-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <Release>${project.version}</Release>
                                <!-- <Build-Number>${svn.revision}</Build-Number> -->
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <!-- the shiro aspectj library referenced in aspectj plugin above -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-aspectj</artifactId>
        </dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.13</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>1.8.13</version>
			<scope>compile</scope>
		</dependency>

    </dependencies>
	
</project>
